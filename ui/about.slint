// By: Eric MacDonald (eMac)

import {
	Page
} from "./widgets/page.slint";
import {
	Button,
	AboutSlint
} from "std-widgets.slint";

export global UIAbout {
	in-out property<bool> fart-enabled: false;
	callback do-fart();
}

export component AboutPage inherits Page {
	spacing: 10px;
	
	Text {
		text: @tr("WebTV MAME Launcher");
		padding: 10px;
		font-weight: 700;
		font-size: 18px;
	}

	Text {
		text: @tr("This was built so people don't need to use the command line to launch and play with the WebTV MAME build. This tool should recognize all known WebTV boxes.");
		padding: 10px;
		wrap: word-wrap;
	}
	Text {
		text: @tr("Built by eMac. Special thanks to Zefie, MattMan, FairPlay137 and others from the WebTV hacking community! Enjoy!");
		padding: 10px;
		wrap: word-wrap;
	}

	Rectangle { 
		height: 5px;
	}

	Text {
		text: @tr("Notes:");
		padding: 10px;
		font-weight: 500;
		font-size: 15px;
		wrap: word-wrap;
	}
	Text {
		text: @tr("- Most classic (bf0/bfe) approms don't support PAL mode properly. Some approms boot but have memory allocation issues. Other approms fail with \"CACHE ERROR\" (i.e., an access violation) when trying to access PAL assets like the options bar from the ROMFS.");
		padding: 2px;
		wrap: word-wrap;
	}
	Text {
		text: @tr("- Older classic (bf0/bfe) builds (pre-7000s) have unreliable modem support. Don't be surprised if you can't connect or have a slow connection with older builds.");
		padding: 2px;
		wrap: word-wrap;
	}
	Text {
		text: @tr("- Most classic (bf0/bfe) debug builds require the 4MB dev box configuration. The retail config only has 2MB flash which truncates 4MB debug builds.");
		padding: 2px;
		wrap: word-wrap;
	}
	Text {
		text: @tr("- Debug builds will crash into the debugger. You can see this if you have console input enabled and see \"app>\" the log output. You can interact with the debugger by typing into the launcher window.");
		padding: 2px;
		wrap: word-wrap;
	}
	Text {
		text: @tr("- MAME currently doesn't support softmodems, so you can only play around with softmodem boxes without connecting.");
		padding: 2px;
		wrap: word-wrap;
	}
	Text {
		text: @tr("- Some builds (especially ones with Flash support) use dynamic code execution and can crash.");
		padding: 2px;
		wrap: word-wrap;
	}
	Text {
		text: @tr("- There are some gfxUnit differences compared to real hardware. Expect some color, alpha blending or alignment issues.");
		padding: 2px;
		wrap: word-wrap;
	}
	Text {
		text: @tr("- Windows CE builds hammer the CPU trying to context switch between threads. Expect some speed differences compared to real hardware.");
		padding: 2px;
		wrap: word-wrap;
	}
	Text {
		text: @tr("- DOOM and other games can hammer RAM and freeze up at times.");
		padding: 2px;
		wrap: word-wrap;
	}

	Rectangle { }

	Button {
		text: (UIAbout.fart-enabled) ? "Thank You, Come Again!" : @tr("PULL MY FINGER");
		icon: (UIAbout.fart-enabled) ? @image-url("images/poop.svg") : @image-url("");
		primary: true;
		enabled: !UIAbout.fart-enabled;
		clicked => {
			UIAbout.do-fart();
		}
	}
}
